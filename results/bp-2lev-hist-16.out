sim-outorder: SimpleScalar/PISA Tool Set version 3.0 of August, 2003.
Copyright (c) 1994-2003 by Todd M. Austin, Ph.D. and SimpleScalar, LLC.
All Rights Reserved. This version of SimpleScalar is licensed for academic
non-commercial use.  No portion of this work may be used by any commercial
entity, or for any commercial purpose, without the prior written permission
of SimpleScalar, LLC (info@simplescalar.com).


Processor Parameters:
Issue Width: 4
Window Size: 16
Number of Virtual Registers: 32
Number of Physical Registers: 16
Datapath Width: 64
Total Power Consumption: 73.7924
Branch Predictor Power Consumption: 4.52552  (6.3%)
 branch target buffer power (W): 4.16837
 local predict power (W): 0.090369
 global predict power (W): 0.0996078
 chooser power (W): 0.0702439
 RAS power (W): 0.0969383
Rename Logic Power Consumption: 0.417965  (0.582%)
 Instruction Decode Power (W): 0.0159915
 RAT decode_power (W): 0.113514
 RAT wordline_power (W): 0.0307815
 RAT bitline_power (W): 0.246771
 DCL Comparators (W): 0.0109075
Instruction Window Power Consumption: 2.20432  (3.07%)
 tagdrive (W): 0.0943488
 tagmatch (W): 0.033695
 Selection Logic (W): 0.0134217
 decode_power (W): 0.0532503
 wordline_power (W): 0.0844643
 bitline_power (W): 1.92514
Load/Store Queue Power Consumption: 0.96318  (1.34%)
 tagdrive (W): 0.457232
 tagmatch (W): 0.100774
 decode_power (W): 0.00799577
 wordline_power (W): 0.0150119
 bitline_power (W): 0.382166
Arch. Register File Power Consumption: 3.57247  (4.98%)
 decode_power (W): 0.113514
 wordline_power (W): 0.0844643
 bitline_power (W): 3.37449
Result Bus Power Consumption: 2.29754  (3.2%)
Total Clock Power: 26.0992  (36.4%)
Int ALU Power: 4.66013  (6.49%)
FP ALU Power: 14.281  (19.9%)
Instruction Cache Power Consumption: 2.21363  (3.08%)
 decode_power (W): 0.779481
 wordline_power (W): 0.028656
 bitline_power (W): 0.886372
 senseamp_power (W): 0.096
 tagarray_power (W): 0.423116
Itlb_power (W): 0.263317 (0.367%)
Data Cache Power Consumption: 5.18303  (7.22%)
 decode_power (W): 0.651055
 wordline_power (W): 0.196735
 bitline_power (W): 2.71235
 senseamp_power (W): 0.768
 tagarray_power (W): 0.854886
Dtlb_power (W): 0.901877 (1.26%)
Level 2 Cache Power Consumption: 4.2091 (5.86%)
 decode_power (W): 0.41817
 wordline_power (W): 0.0430878
 bitline_power (W): 3.0244
 senseamp_power (W): 0.192
 tagarray_power (W): 0.531433
sim: command line: sim-outorder -redir:sim /home/ubuntu/ece568-single-core-dse/results/bp-2lev-hist-16.out -config /home/ubuntu/ece568-single-core-dse/configs/step1-bpred/bp-2lev-hist-16.cfg eeg 

sim: simulation started @ Sun Mar  6 16:39:04 2016, options follow:

sim-outorder: This simulator implements a very detailed out-of-order issue
superscalar processor with a two-level memory system and speculative
execution support.  This simulator is a performance simulator, tracking the
latency of all pipeline operations.

# -config                     # load configuration from a file
# -dumpconfig                 # dump configuration to a file
# -h                    false # print help message    
# -v                    false # verbose operation     
# -d                    false # enable debug message  
# -i                    false # start in Dlite debugger
-seed                       1 # random number generator seed (0 for timer seed)
# -q                    false # initialize and terminate immediately
# -chkpt               <null> # restore EIO trace execution from <fname>
# -redir:sim     /home/ubuntu/ece568-single-core-dse/results/bp-2lev-hist-16.out # redirect simulator output to file (non-interactive only)
# -redir:prog          <null> # redirect simulated program output to file
-nice                       0 # simulator scheduling priority
-max:inst                   0 # maximum number of inst's to execute
-fastfwd                    0 # number of insts skipped before timing starts
# -ptrace              <null> # generate pipetrace, i.e., <fname|stdout|stderr> <range>
-fetch:ifqsize              4 # instruction fetch queue size (in insts)
-fetch:mplat                3 # extra branch mis-prediction latency
-fetch:speed                1 # speed of front-end of machine relative to execution core
-bpred                   2lev # branch predictor type {nottaken|taken|perfect|bimod|2lev|comb}
-bpred:bimod     2048 # bimodal predictor config (<table size>)
-bpred:2lev      1 1024 16 0 # 2-level predictor config (<l1size> <l2size> <hist_size> <xor>)
-bpred:comb      1024 # combining predictor config (<meta_table_size>)
-bpred:ras                  8 # return address stack size (0 for no return stack)
-bpred:btb       512 4 # BTB config (<num_sets> <associativity>)
# -bpred:spec_update       <null> # speculative predictors update in {ID|WB} (default non-spec)
-decode:width               4 # instruction decode B/W (insts/cycle)
-issue:width                4 # instruction issue B/W (insts/cycle)
-issue:inorder          false # run pipeline with in-order issue
-issue:wrongpath         true # issue instructions down wrong execution paths
-commit:width               4 # instruction commit B/W (insts/cycle)
-ruu:size                  16 # register update unit (RUU) size
-lsq:size                   8 # load/store queue (LSQ) size
-cache:dl1       dl1:128:32:4:l # l1 data cache config, i.e., {<config>|none}
-cache:dl1lat               1 # l1 data cache hit latency (in cycles)
-cache:dl2       ul2:1024:64:4:l # l2 data cache config, i.e., {<config>|none}
-cache:dl2lat               6 # l2 data cache hit latency (in cycles)
-cache:il1       il1:512:32:1:l # l1 inst cache config, i.e., {<config>|dl1|dl2|none}
-cache:il1lat               1 # l1 instruction cache hit latency (in cycles)
-cache:il2                dl2 # l2 instruction cache config, i.e., {<config>|dl2|none}
-cache:il2lat               6 # l2 instruction cache hit latency (in cycles)
-cache:flush            false # flush caches on system calls
-cache:icompress        false # convert 64-bit inst addresses to 32-bit inst equivalents
-mem:lat         18 2 # memory access latency (<first_chunk> <inter_chunk>)
-mem:width                  8 # memory access bus width (in bytes)
-tlb:itlb        itlb:16:4096:4:l # instruction TLB config, i.e., {<config>|none}
-tlb:dtlb        dtlb:32:4096:4:l # data TLB config, i.e., {<config>|none}
-tlb:lat                   30 # inst/data TLB miss latency (in cycles)
-res:ialu                   4 # total number of integer ALU's available
-res:imult                  1 # total number of integer multiplier/dividers available
-res:memport                2 # total number of memory system ports available (to CPU)
-res:fpalu                  4 # total number of floating point ALU's available
-res:fpmult                 1 # total number of floating point multiplier/dividers available
# -pcstat              <null> # profile stat(s) against text addr's (mult uses ok)
-bugcompat              false # operate in backward-compatible bugs mode (for testing only)

  Pipetrace range arguments are formatted as follows:

    {{@|#}<start>}:{{@|#|+}<end>}

  Both ends of the range are optional, if neither are specified, the entire
  execution is traced.  Ranges that start with a `@' designate an address
  range to be traced, those that start with an `#' designate a cycle count
  range.  All other range values represent an instruction count range.  The
  second argument, if specified with a `+', indicates a value relative
  to the first argument, e.g., 1000:+100 == 1000:1100.  Program symbols may
  be used in all contexts.

    Examples:   -ptrace FOO.trc #0:#1000
                -ptrace BAR.trc @2000:
                -ptrace BLAH.trc :1500
                -ptrace UXXE.trc :
                -ptrace FOOBAR.trc @main:+278

  Branch predictor configuration examples for 2-level predictor:
    Configurations:   N, M, W, X
      N   # entries in first level (# of shift register(s))
      W   width of shift register(s)
      M   # entries in 2nd level (# of counters, or other FSM)
      X   (yes-1/no-0) xor history and address for 2nd level index
    Sample predictors:
      GAg     : 1, W, 2^W, 0
      GAp     : 1, W, M (M > 2^W), 0
      PAg     : N, W, 2^W, 0
      PAp     : N, W, M (M == 2^(N+W)), 0
      gshare  : 1, W, 2^W, 1
  Predictor `comb' combines a bimodal and a 2-level predictor.

  The cache config parameter <config> has the following format:

    <name>:<nsets>:<bsize>:<assoc>:<repl>

    <name>   - name of the cache being defined
    <nsets>  - number of sets in the cache
    <bsize>  - block size of the cache
    <assoc>  - associativity of the cache
    <repl>   - block replacement strategy, 'l'-LRU, 'f'-FIFO, 'r'-random

    Examples:   -cache:dl1 dl1:4096:32:1:l
                -dtlb dtlb:128:4096:32:r

  Cache levels can be unified by pointing a level of the instruction cache
  hierarchy at the data cache hiearchy using the "dl1" and "dl2" cache
  configuration arguments.  Most sensible combinations are supported, e.g.,

    A unified l2 cache (il2 is pointed at dl2):
      -cache:il1 il1:128:64:1:l -cache:il2 dl2
      -cache:dl1 dl1:256:32:1:l -cache:dl2 ul2:1024:64:2:l

    Or, a fully unified cache hierarchy (il1 pointed at dl1):
      -cache:il1 dl1
      -cache:dl1 ul1:256:32:1:l -cache:dl2 ul2:1024:64:2:l



sim: ** starting performance simulation **

sim: ** simulation statistics **
sim_num_insn              842550792 # total number of instructions committed
sim_num_refs              255032800 # total number of loads and stores committed
sim_num_loads             171016145 # total number of loads committed
sim_num_stores         84016655.0000 # total number of stores committed
sim_num_branches          120522975 # total number of branches committed
sim_elapsed_time               1243 # total simulation time in seconds
sim_inst_rate           677836.5181 # simulation speed (in insts/sec)
sim_total_insn            897199219 # total number of instructions executed
sim_total_refs            272702042 # total number of loads and stores executed
sim_total_loads           188646194 # total number of loads executed
sim_total_stores       84055848.0000 # total number of stores executed
sim_total_branches        128904378 # total number of branches executed
sim_cycle                 595777063 # total simulation time in cycles
sim_IPC                      1.4142 # instructions per cycle
sim_CPI                      0.7071 # cycles per instruction
sim_exec_BW                  1.5059 # total instructions (mis-spec + committed) per cycle
sim_IPB                      6.9908 # instruction per branch
IFQ_count                1676158848 # cumulative IFQ occupancy
IFQ_fcount                360083815 # cumulative IFQ full count
ifq_occupancy                2.8134 # avg IFQ occupancy (insn's)
ifq_rate                     1.5059 # avg IFQ dispatch rate (insn/cycle)
ifq_latency                  1.8682 # avg IFQ occupant latency (cycle's)
ifq_full                     0.6044 # fraction of time (cycle's) IFQ was full
RUU_count                6831654147 # cumulative RUU occupancy
RUU_fcount                223465749 # cumulative RUU full count
ruu_occupancy               11.4668 # avg RUU occupancy (insn's)
ruu_rate                     1.5059 # avg RUU dispatch rate (insn/cycle)
ruu_latency                  7.6144 # avg RUU occupant latency (cycle's)
ruu_full                     0.3751 # fraction of time (cycle's) RUU was full
LSQ_count                2292173230 # cumulative LSQ occupancy
LSQ_fcount                134622420 # cumulative LSQ full count
lsq_occupancy                3.8474 # avg LSQ occupancy (insn's)
lsq_rate                     1.5059 # avg LSQ dispatch rate (insn/cycle)
lsq_latency                  2.5548 # avg LSQ occupant latency (cycle's)
lsq_full                     0.2260 # fraction of time (cycle's) LSQ was full
sim_slip                 9951083790 # total number of slip cycles
avg_sim_slip                11.8107 # the average slip between issue and retirement
bpred_2lev.lookups        131481257 # total number of bpred lookups
bpred_2lev.updates        120522975 # total number of updates
bpred_2lev.addr_hits      110157450 # total number of address-predicted hits
bpred_2lev.dir_hits       110163309 # total number of direction-predicted hits (includes addr-hits)
bpred_2lev.misses          10359666 # total number of misses
bpred_2lev.jr_hits         28423965 # total number of address-predicted hits for JR's
bpred_2lev.jr_seen         28430346 # total number of JR's seen
bpred_2lev.jr_non_ras_hits.PP           39 # total number of address-predicted hits for non-RAS JR's
bpred_2lev.jr_non_ras_seen.PP         1276 # total number of non-RAS JR's seen
bpred_2lev.bpred_addr_rate    0.9140 # branch address-prediction rate (i.e., addr-hits/updates)
bpred_2lev.bpred_dir_rate    0.9140 # branch direction-prediction rate (i.e., all-hits/updates)
bpred_2lev.bpred_jr_rate    0.9998 # JR address-prediction rate (i.e., JR addr-hits/JRs seen)
bpred_2lev.bpred_jr_non_ras_rate.PP    0.0306 # non-RAS JR addr-pred rate (ie, non-RAS JR hits/JRs seen)
bpred_2lev.retstack_pushes     30033842 # total number of address pushed onto ret-addr stack
bpred_2lev.retstack_pops     31356200 # total number of address popped off of ret-addr stack
bpred_2lev.used_ras.PP     28429070 # total number of RAS predictions used
bpred_2lev.ras_hits.PP     28423926 # total number of RAS hits
bpred_2lev.ras_rate.PP    0.9998 # RAS prediction rate (i.e., RAS hits/used RAS)
il1.accesses              931505511 # total number of accesses
il1.hits                  913234617 # total number of hits
il1.misses                 18270894 # total number of misses
il1.replacements           18270382 # total number of replacements
il1.writebacks                    0 # total number of writebacks
il1.invalidations                 0 # total number of invalidations
il1.miss_rate                0.0196 # miss rate (i.e., misses/ref)
il1.repl_rate                0.0196 # replacement rate (i.e., repls/ref)
il1.wb_rate                  0.0000 # writeback rate (i.e., wrbks/ref)
il1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
dl1.accesses              265522697 # total number of accesses
dl1.hits                  264996314 # total number of hits
dl1.misses                   526383 # total number of misses
dl1.replacements             525871 # total number of replacements
dl1.writebacks               330576 # total number of writebacks
dl1.invalidations                 0 # total number of invalidations
dl1.miss_rate                0.0020 # miss rate (i.e., misses/ref)
dl1.repl_rate                0.0020 # replacement rate (i.e., repls/ref)
dl1.wb_rate                  0.0012 # writeback rate (i.e., wrbks/ref)
dl1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
ul2.accesses               19127853 # total number of accesses
ul2.hits                   19065643 # total number of hits
ul2.misses                    62210 # total number of misses
ul2.replacements              58114 # total number of replacements
ul2.writebacks                57095 # total number of writebacks
ul2.invalidations                 0 # total number of invalidations
ul2.miss_rate                0.0033 # miss rate (i.e., misses/ref)
ul2.repl_rate                0.0030 # replacement rate (i.e., repls/ref)
ul2.wb_rate                  0.0030 # writeback rate (i.e., wrbks/ref)
ul2.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
itlb.accesses             931505511 # total number of accesses
itlb.hits                 931505480 # total number of hits
itlb.misses                      31 # total number of misses
itlb.replacements                 0 # total number of replacements
itlb.writebacks                   0 # total number of writebacks
itlb.invalidations                0 # total number of invalidations
itlb.miss_rate               0.0000 # miss rate (i.e., misses/ref)
itlb.repl_rate               0.0000 # replacement rate (i.e., repls/ref)
itlb.wb_rate                 0.0000 # writeback rate (i.e., wrbks/ref)
itlb.inv_rate                0.0000 # invalidation rate (i.e., invs/ref)
dtlb.accesses             265535228 # total number of accesses
dtlb.hits                 265533847 # total number of hits
dtlb.misses                    1381 # total number of misses
dtlb.replacements              1253 # total number of replacements
dtlb.writebacks                   0 # total number of writebacks
dtlb.invalidations                0 # total number of invalidations
dtlb.miss_rate               0.0000 # miss rate (i.e., misses/ref)
dtlb.repl_rate               0.0000 # replacement rate (i.e., repls/ref)
dtlb.wb_rate                 0.0000 # writeback rate (i.e., wrbks/ref)
dtlb.inv_rate                0.0000 # invalidation rate (i.e., invs/ref)
rename_power           249014254.1628 # total power usage of rename unit
bpred_power            2696203571.8804 # total power usage of bpred unit
window_power           1313282969.4635 # total power usage of instruction window
lsq_power              573840546.2063 # total power usage of load/store queue
regfile_power          2128396933.1480 # total power usage of arch. regfile
icache_power           1475705083.1251 # total power usage of icache
dcache_power           3625247553.7381 # total power usage of dcache
dcache2_power          2507682536.0128 # total power usage of dcache2
alu_power              11284717884.1232 # total power usage of alu
falu_power             8508319022.7133 # total power usage of falu
resultbus_power        1368823352.1570 # total power usage of resultbus
clock_power            15549321351.8985 # total power usage of clock
avg_rename_power             0.4180 # avg power usage of rename unit
avg_bpred_power              4.5255 # avg power usage of bpred unit
avg_window_power             2.2043 # avg power usage of instruction window
avg_lsq_power                0.9632 # avg power usage of lsq
avg_regfile_power            3.5725 # avg power usage of arch. regfile
avg_icache_power             2.4769 # avg power usage of icache
avg_dcache_power             6.0849 # avg power usage of dcache
avg_dcache2_power            4.2091 # avg power usage of dcache2
avg_alu_power               18.9412 # avg power usage of alu
avg_falu_power              14.2810 # avg power usage of falu
avg_resultbus_power          2.2975 # avg power usage of resultbus
avg_clock_power             26.0992 # avg power usage of clock
fetch_stage_power      4171908655.0055 # total power usage of fetch stage
dispatch_stage_power   249014254.1628 # total power usage of dispatch stage
issue_stage_power      20673594841.7008 # total power usage of issue stage
avg_fetch_power              7.0025 # average power of fetch unit per cycle
avg_dispatch_power           0.4180 # average power of dispatch unit per cycle
avg_issue_power             34.7002 # average power of issue unit per cycle
total_power            42772236035.9156 # total power per cycle
avg_total_power_cycle       71.7924 # average total power per cycle
avg_total_power_cycle_nofp_nod2      53.3022 # average total power per cycle
avg_total_power_insn        47.6731 # average total power per insn
avg_total_power_insn_nofp_nod2      35.3949 # average total power per insn
rename_power_cc1       131262949.2587 # total power usage of rename unit_cc1
bpred_power_cc1        441225367.5746 # total power usage of bpred unit_cc1
window_power_cc1       971653545.4050 # total power usage of instruction window_cc1
lsq_power_cc1          79237849.4699 # total power usage of lsq_cc1
regfile_power_cc1      1083783389.1917 # total power usage of arch. regfile_cc1
icache_power_cc1       824143973.0101 # total power usage of icache_cc1
dcache_power_cc1       1010384441.2695 # total power usage of dcache_cc1
dcache2_power_cc1      79111213.6939 # total power usage of dcache2_cc1
alu_power_cc1          3303323129.8692 # total power usage of alu_cc1
resultbus_power_cc1    671726724.5865 # total power usage of resultbus_cc1
clock_power_cc1        5467039588.9570 # total power usage of clock_cc1
avg_rename_power_cc1         0.2203 # avg power usage of rename unit_cc1
avg_bpred_power_cc1          0.7406 # avg power usage of bpred unit_cc1
avg_window_power_cc1         1.6309 # avg power usage of instruction window_cc1
avg_lsq_power_cc1            0.1330 # avg power usage of lsq_cc1
avg_regfile_power_cc1        1.8191 # avg power usage of arch. regfile_cc1
avg_icache_power_cc1         1.3833 # avg power usage of icache_cc1
avg_dcache_power_cc1         1.6959 # avg power usage of dcache_cc1
avg_dcache2_power_cc1        0.1328 # avg power usage of dcache2_cc1
avg_alu_power_cc1            5.5446 # avg power usage of alu_cc1
avg_resultbus_power_cc1       1.1275 # avg power usage of resultbus_cc1
avg_clock_power_cc1          9.1763 # avg power usage of clock_cc1
fetch_stage_power_cc1  1265369340.5847 # total power usage of fetch stage_cc1
dispatch_stage_power_cc1 131262949.2587 # total power usage of dispatch stage_cc1
issue_stage_power_cc1  6115436904.2940 # total power usage of issue stage_cc1
avg_fetch_power_cc1          2.1239 # average power of fetch unit per cycle_cc1
avg_dispatch_power_cc1       0.2203 # average power of dispatch unit per cycle_cc1
avg_issue_power_cc1         10.2646 # average power of issue unit per cycle_cc1
total_power_cycle_cc1  14062892172.2860 # total power per cycle_cc1
avg_total_power_cycle_cc1      23.6043 # average total power per cycle_cc1
avg_total_power_insn_cc1      15.6742 # average total power per insn_cc1
rename_power_cc2       93741672.0111 # total power usage of rename unit_cc2
bpred_power_cc2        272714826.8630 # total power usage of bpred unit_cc2
window_power_cc2       664569613.3149 # total power usage of instruction window_cc2
lsq_power_cc2          62515639.1680 # total power usage of lsq_cc2
regfile_power_cc2      311966950.3016 # total power usage of arch. regfile_cc2
icache_power_cc2       824143973.0101 # total power usage of icache_cc2
dcache_power_cc2       807840361.0440 # total power usage of dcache_cc2
dcache2_power_cc2      40255479.4541 # total power usage of dcache2_cc2
alu_power_cc2          1314162322.8186 # total power usage of alu_cc2
resultbus_power_cc2    387918900.0150 # total power usage of resultbus_cc2
clock_power_cc2        3041065592.9589 # total power usage of clock_cc2
avg_rename_power_cc2         0.1573 # avg power usage of rename unit_cc2
avg_bpred_power_cc2          0.4577 # avg power usage of bpred unit_cc2
avg_window_power_cc2         1.1155 # avg power usage of instruction window_cc2
avg_lsq_power_cc2            0.1049 # avg power usage of instruction lsq_cc2
avg_regfile_power_cc2        0.5236 # avg power usage of arch. regfile_cc2
avg_icache_power_cc2         1.3833 # avg power usage of icache_cc2
avg_dcache_power_cc2         1.3559 # avg power usage of dcache_cc2
avg_dcache2_power_cc2        0.0676 # avg power usage of dcache2_cc2
avg_alu_power_cc2            2.2058 # avg power usage of alu_cc2
avg_resultbus_power_cc2       0.6511 # avg power usage of resultbus_cc2
avg_clock_power_cc2          5.1044 # avg power usage of clock_cc2
fetch_stage_power_cc2  1096858799.8731 # total power usage of fetch stage_cc2
dispatch_stage_power_cc2 93741672.0111 # total power usage of dispatch stage_cc2
issue_stage_power_cc2  3277262315.8147 # total power usage of issue stage_cc2
avg_fetch_power_cc2          1.8411 # average power of fetch unit per cycle_cc2
avg_dispatch_power_cc2       0.1573 # average power of dispatch unit per cycle_cc2
avg_issue_power_cc2          5.5008 # average power of issue unit per cycle_cc2
total_power_cycle_cc2  7820895330.9594 # total power per cycle_cc2
avg_total_power_cycle_cc2      13.1272 # average total power per cycle_cc2
avg_total_power_insn_cc2       8.7170 # average total power per insn_cc2
rename_power_cc3       105516802.4497 # total power usage of rename unit_cc3
bpred_power_cc3        500290300.1493 # total power usage of bpred unit_cc3
window_power_cc3       688185175.8817 # total power usage of instruction window_cc3
lsq_power_cc3          111488826.4793 # total power usage of lsq_cc3
regfile_power_cc3      392300118.5203 # total power usage of arch. regfile_cc3
icache_power_cc3       889300079.4669 # total power usage of icache_cc3
dcache_power_cc3       1070339161.5074 # total power usage of dcache_cc3
dcache2_power_cc3      283112937.4141 # total power usage of dcache2_cc3
alu_power_cc3          2112301794.4076 # total power usage of alu_cc3
resultbus_power_cc3    433613387.1863 # total power usage of resultbus_cc3
clock_power_cc3        4012713054.0882 # total power usage of clock_cc3
avg_rename_power_cc3         0.1771 # avg power usage of rename unit_cc3
avg_bpred_power_cc3          0.8397 # avg power usage of bpred unit_cc3
avg_window_power_cc3         1.1551 # avg power usage of instruction window_cc3
avg_lsq_power_cc3            0.1871 # avg power usage of instruction lsq_cc3
avg_regfile_power_cc3        0.6585 # avg power usage of arch. regfile_cc3
avg_icache_power_cc3         1.4927 # avg power usage of icache_cc3
avg_dcache_power_cc3         1.7965 # avg power usage of dcache_cc3
avg_dcache2_power_cc3        0.4752 # avg power usage of dcache2_cc3
avg_alu_power_cc3            3.5455 # avg power usage of alu_cc3
avg_resultbus_power_cc3       0.7278 # avg power usage of resultbus_cc3
avg_clock_power_cc3          6.7353 # avg power usage of clock_cc3
fetch_stage_power_cc3  1389590379.6163 # total power usage of fetch stage_cc3
dispatch_stage_power_cc3 105516802.4497 # total power usage of dispatch stage_cc3
issue_stage_power_cc3  4699041282.8764 # total power usage of issue stage_cc3
avg_fetch_power_cc3          2.3324 # average power of fetch unit per cycle_cc3
avg_dispatch_power_cc3       0.1771 # average power of dispatch unit per cycle_cc3
avg_issue_power_cc3          7.8872 # average power of issue unit per cycle_cc3
total_power_cycle_cc3  10599161637.5508 # total power per cycle_cc3
avg_total_power_cycle_cc3      17.7905 # average total power per cycle_cc3
avg_total_power_insn_cc3      11.8136 # average total power per insn_cc3
total_rename_access       897123564 # total number accesses of rename unit
total_bpred_access        120522975 # total number accesses of bpred unit
total_window_access      3300232132 # total number accesses of instruction window
total_lsq_access          265551650 # total number accesses of load/store queue
total_regfile_access     1278137731 # total number accesses of arch. regfile
total_icache_access       931930649 # total number accesses of icache
total_dcache_access       265522697 # total number accesses of dcache
total_dcache2_access       19127853 # total number accesses of dcache2
total_alu_access          845148915 # total number accesses of alu
total_resultbus_access    926982707 # total number accesses of resultbus
avg_rename_access            1.5058 # avg number accesses of rename unit
avg_bpred_access             0.2023 # avg number accesses of bpred unit
avg_window_access            5.5394 # avg number accesses of instruction window
avg_lsq_access               0.4457 # avg number accesses of lsq
avg_regfile_access           2.1453 # avg number accesses of arch. regfile
avg_icache_access            1.5642 # avg number accesses of icache
avg_dcache_access            0.4457 # avg number accesses of dcache
avg_dcache2_access           0.0321 # avg number accesses of dcache2
avg_alu_access               1.4186 # avg number accesses of alu
avg_resultbus_access         1.5559 # avg number accesses of resultbus
max_rename_access                 4 # max number accesses of rename unit
max_bpred_access                  4 # max number accesses of bpred unit
max_window_access                17 # max number accesses of instruction window
max_lsq_access                    6 # max number accesses of load/store queue
max_regfile_access               12 # max number accesses of arch. regfile
max_icache_access                 4 # max number accesses of icache
max_dcache_access                 4 # max number accesses of dcache
max_dcache2_access                4 # max number accesses of dcache2
max_alu_access                    4 # max number accesses of alu
max_resultbus_access              9 # max number accesses of resultbus
max_cycle_power_cc1         53.5855 # maximum cycle power usage of cc1
max_cycle_power_cc2         32.1937 # maximum cycle power usage of cc2
max_cycle_power_cc3         34.9760 # maximum cycle power usage of cc3
sim_invalid_addrs                 2 # total non-speculative bogus addresses seen (debug var)
ld_text_base             0x00400000 # program text (code) segment base
ld_text_size                 124464 # program text (code) size in bytes
ld_data_base             0x10000000 # program initialized data segment base
ld_data_size                  13588 # program init'ed `.data' and uninit'ed `.bss' size in bytes
ld_stack_base            0x7fffc000 # program stack segment base (highest address in stack)
ld_stack_size                 16384 # program initial stack size
ld_prog_entry            0x00400140 # program entry point (initial PC)
ld_environ_base          0x7fff8000 # program environment base address address
ld_target_big_endian              0 # target executable endian-ness, non-zero if big endian
mem.page_count                  962 # total number of pages allocated
mem.page_mem                  3848k # total size of memory pages allocated
mem.ptab_misses                1293 # total first level page table misses
mem.ptab_accesses        5808778915 # total page table accesses
mem.ptab_miss_rate           0.0000 # first level page table miss rate

