sim-outorder: SimpleScalar/PISA Tool Set version 3.0 of August, 2003.
Copyright (c) 1994-2003 by Todd M. Austin, Ph.D. and SimpleScalar, LLC.
All Rights Reserved. This version of SimpleScalar is licensed for academic
non-commercial use.  No portion of this work may be used by any commercial
entity, or for any commercial purpose, without the prior written permission
of SimpleScalar, LLC (info@simplescalar.com).


Processor Parameters:
Issue Width: 4
Window Size: 16
Number of Virtual Registers: 32
Number of Physical Registers: 16
Datapath Width: 64
Total Power Consumption: 73.4725
Branch Predictor Power Consumption: 4.52313  (6.33%)
 branch target buffer power (W): 4.16837
 local predict power (W): 0.0879711
 global predict power (W): 0.0996078
 chooser power (W): 0.0702439
 RAS power (W): 0.0969383
Rename Logic Power Consumption: 0.176835  (0.247%)
 Instruction Decode Power (W): 0.00799577
 RAT decode_power (W): 0.0567572
 RAT wordline_power (W): 0.0144561
 RAT bitline_power (W): 0.0958077
 DCL Comparators (W): 0.00181792
Instruction Window Power Consumption: 2.20432  (3.08%)
 tagdrive (W): 0.0943488
 tagmatch (W): 0.033695
 Selection Logic (W): 0.0134217
 decode_power (W): 0.0532503
 wordline_power (W): 0.0844643
 bitline_power (W): 1.92514
Load/Store Queue Power Consumption: 0.96318  (1.35%)
 tagdrive (W): 0.457232
 tagmatch (W): 0.100774
 decode_power (W): 0.00799577
 wordline_power (W): 0.0150119
 bitline_power (W): 0.382166
Arch. Register File Power Consumption: 3.57247  (5%)
 decode_power (W): 0.113514
 wordline_power (W): 0.0844643
 bitline_power (W): 3.37449
Result Bus Power Consumption: 2.29754  (3.21%)
Total Clock Power: 26.0229  (36.4%)
Int ALU Power: 4.66013  (6.52%)
FP ALU Power: 14.281  (20%)
Instruction Cache Power Consumption: 2.21363  (3.1%)
 decode_power (W): 0.779481
 wordline_power (W): 0.028656
 bitline_power (W): 0.886372
 senseamp_power (W): 0.096
 tagarray_power (W): 0.423116
Itlb_power (W): 0.263317 (0.368%)
Data Cache Power Consumption: 5.18303  (7.25%)
 decode_power (W): 0.651055
 wordline_power (W): 0.196735
 bitline_power (W): 2.71235
 senseamp_power (W): 0.768
 tagarray_power (W): 0.854886
Dtlb_power (W): 0.901877 (1.26%)
Level 2 Cache Power Consumption: 4.2091 (5.89%)
 decode_power (W): 0.41817
 wordline_power (W): 0.0430878
 bitline_power (W): 3.0244
 senseamp_power (W): 0.192
 tagarray_power (W): 0.531433
sim: command line: sim-outorder -redir:sim /home/ubuntu/ece568-single-core-dse/results/dp-decode-2.out -config /home/ubuntu/ece568-single-core-dse/configs/step1-dp/dp-decode-2.cfg eeg 

sim: simulation started @ Sat Mar  5 22:17:01 2016, options follow:

sim-outorder: This simulator implements a very detailed out-of-order issue
superscalar processor with a two-level memory system and speculative
execution support.  This simulator is a performance simulator, tracking the
latency of all pipeline operations.

# -config                     # load configuration from a file
# -dumpconfig                 # dump configuration to a file
# -h                    false # print help message    
# -v                    false # verbose operation     
# -d                    false # enable debug message  
# -i                    false # start in Dlite debugger
-seed                       1 # random number generator seed (0 for timer seed)
# -q                    false # initialize and terminate immediately
# -chkpt               <null> # restore EIO trace execution from <fname>
# -redir:sim     /home/ubuntu/ece568-single-core-dse/results/dp-decode-2.out # redirect simulator output to file (non-interactive only)
# -redir:prog          <null> # redirect simulated program output to file
-nice                       0 # simulator scheduling priority
-max:inst                   0 # maximum number of inst's to execute
-fastfwd                    0 # number of insts skipped before timing starts
# -ptrace              <null> # generate pipetrace, i.e., <fname|stdout|stderr> <range>
-fetch:ifqsize              4 # instruction fetch queue size (in insts)
-fetch:mplat                3 # extra branch mis-prediction latency
-fetch:speed                1 # speed of front-end of machine relative to execution core
-bpred                  bimod # branch predictor type {nottaken|taken|perfect|bimod|2lev|comb}
-bpred:bimod     2048 # bimodal predictor config (<table size>)
-bpred:2lev      1 1024 8 0 # 2-level predictor config (<l1size> <l2size> <hist_size> <xor>)
-bpred:comb      1024 # combining predictor config (<meta_table_size>)
-bpred:ras                  8 # return address stack size (0 for no return stack)
-bpred:btb       512 4 # BTB config (<num_sets> <associativity>)
# -bpred:spec_update       <null> # speculative predictors update in {ID|WB} (default non-spec)
-decode:width               2 # instruction decode B/W (insts/cycle)
-issue:width                4 # instruction issue B/W (insts/cycle)
-issue:inorder          false # run pipeline with in-order issue
-issue:wrongpath         true # issue instructions down wrong execution paths
-commit:width               4 # instruction commit B/W (insts/cycle)
-ruu:size                  16 # register update unit (RUU) size
-lsq:size                   8 # load/store queue (LSQ) size
-cache:dl1       dl1:128:32:4:l # l1 data cache config, i.e., {<config>|none}
-cache:dl1lat               1 # l1 data cache hit latency (in cycles)
-cache:dl2       ul2:1024:64:4:l # l2 data cache config, i.e., {<config>|none}
-cache:dl2lat               6 # l2 data cache hit latency (in cycles)
-cache:il1       il1:512:32:1:l # l1 inst cache config, i.e., {<config>|dl1|dl2|none}
-cache:il1lat               1 # l1 instruction cache hit latency (in cycles)
-cache:il2                dl2 # l2 instruction cache config, i.e., {<config>|dl2|none}
-cache:il2lat               6 # l2 instruction cache hit latency (in cycles)
-cache:flush            false # flush caches on system calls
-cache:icompress        false # convert 64-bit inst addresses to 32-bit inst equivalents
-mem:lat         18 2 # memory access latency (<first_chunk> <inter_chunk>)
-mem:width                  8 # memory access bus width (in bytes)
-tlb:itlb        itlb:16:4096:4:l # instruction TLB config, i.e., {<config>|none}
-tlb:dtlb        dtlb:32:4096:4:l # data TLB config, i.e., {<config>|none}
-tlb:lat                   30 # inst/data TLB miss latency (in cycles)
-res:ialu                   4 # total number of integer ALU's available
-res:imult                  1 # total number of integer multiplier/dividers available
-res:memport                2 # total number of memory system ports available (to CPU)
-res:fpalu                  4 # total number of floating point ALU's available
-res:fpmult                 1 # total number of floating point multiplier/dividers available
# -pcstat              <null> # profile stat(s) against text addr's (mult uses ok)
-bugcompat              false # operate in backward-compatible bugs mode (for testing only)

  Pipetrace range arguments are formatted as follows:

    {{@|#}<start>}:{{@|#|+}<end>}

  Both ends of the range are optional, if neither are specified, the entire
  execution is traced.  Ranges that start with a `@' designate an address
  range to be traced, those that start with an `#' designate a cycle count
  range.  All other range values represent an instruction count range.  The
  second argument, if specified with a `+', indicates a value relative
  to the first argument, e.g., 1000:+100 == 1000:1100.  Program symbols may
  be used in all contexts.

    Examples:   -ptrace FOO.trc #0:#1000
                -ptrace BAR.trc @2000:
                -ptrace BLAH.trc :1500
                -ptrace UXXE.trc :
                -ptrace FOOBAR.trc @main:+278

  Branch predictor configuration examples for 2-level predictor:
    Configurations:   N, M, W, X
      N   # entries in first level (# of shift register(s))
      W   width of shift register(s)
      M   # entries in 2nd level (# of counters, or other FSM)
      X   (yes-1/no-0) xor history and address for 2nd level index
    Sample predictors:
      GAg     : 1, W, 2^W, 0
      GAp     : 1, W, M (M > 2^W), 0
      PAg     : N, W, 2^W, 0
      PAp     : N, W, M (M == 2^(N+W)), 0
      gshare  : 1, W, 2^W, 1
  Predictor `comb' combines a bimodal and a 2-level predictor.

  The cache config parameter <config> has the following format:

    <name>:<nsets>:<bsize>:<assoc>:<repl>

    <name>   - name of the cache being defined
    <nsets>  - number of sets in the cache
    <bsize>  - block size of the cache
    <assoc>  - associativity of the cache
    <repl>   - block replacement strategy, 'l'-LRU, 'f'-FIFO, 'r'-random

    Examples:   -cache:dl1 dl1:4096:32:1:l
                -dtlb dtlb:128:4096:32:r

  Cache levels can be unified by pointing a level of the instruction cache
  hierarchy at the data cache hiearchy using the "dl1" and "dl2" cache
  configuration arguments.  Most sensible combinations are supported, e.g.,

    A unified l2 cache (il2 is pointed at dl2):
      -cache:il1 il1:128:64:1:l -cache:il2 dl2
      -cache:dl1 dl1:256:32:1:l -cache:dl2 ul2:1024:64:2:l

    Or, a fully unified cache hierarchy (il1 pointed at dl1):
      -cache:il1 dl1
      -cache:dl1 ul1:256:32:1:l -cache:dl2 ul2:1024:64:2:l



sim: ** starting performance simulation **

sim: ** simulation statistics **
sim_num_insn              842550792 # total number of instructions committed
sim_num_refs              255032800 # total number of loads and stores committed
sim_num_loads             171016145 # total number of loads committed
sim_num_stores         84016655.0000 # total number of stores committed
sim_num_branches          120522975 # total number of branches committed
sim_elapsed_time               2739 # total simulation time in seconds
sim_inst_rate           307612.5564 # simulation speed (in insts/sec)
sim_total_insn            854542437 # total number of instructions executed
sim_total_refs            260997827 # total number of loads and stores executed
sim_total_loads           176977402 # total number of loads executed
sim_total_stores       84020425.0000 # total number of stores executed
sim_total_branches        121285936 # total number of branches executed
sim_cycle                 653427264 # total simulation time in cycles
sim_IPC                      1.2894 # instructions per cycle
sim_CPI                      0.7755 # cycles per instruction
sim_exec_BW                  1.3078 # total instructions (mis-spec + committed) per cycle
sim_IPB                      6.9908 # instruction per branch
IFQ_count                1420802409 # cumulative IFQ occupancy
IFQ_fcount                161714304 # cumulative IFQ full count
ifq_occupancy                2.1744 # avg IFQ occupancy (insn's)
ifq_rate                     1.3078 # avg IFQ dispatch rate (insn/cycle)
ifq_latency                  1.6626 # avg IFQ occupant latency (cycle's)
ifq_full                     0.2475 # fraction of time (cycle's) IFQ was full
RUU_count                5557549066 # cumulative RUU occupancy
RUU_fcount                 84700145 # cumulative RUU full count
ruu_occupancy                8.5052 # avg RUU occupancy (insn's)
ruu_rate                     1.3078 # avg RUU dispatch rate (insn/cycle)
ruu_latency                  6.5035 # avg RUU occupant latency (cycle's)
ruu_full                     0.1296 # fraction of time (cycle's) RUU was full
LSQ_count                1873912493 # cumulative LSQ occupancy
LSQ_fcount                 74396517 # cumulative LSQ full count
lsq_occupancy                2.8678 # avg LSQ occupancy (insn's)
lsq_rate                     1.3078 # avg LSQ dispatch rate (insn/cycle)
lsq_latency                  2.1929 # avg LSQ occupant latency (cycle's)
lsq_full                     0.1139 # fraction of time (cycle's) LSQ was full
sim_slip                 8481878163 # total number of slip cycles
avg_sim_slip                10.0669 # the average slip between issue and retirement
bpred_bimod.lookups       121934441 # total number of bpred lookups
bpred_bimod.updates       120522975 # total number of updates
bpred_bimod.addr_hits     118677665 # total number of address-predicted hits
bpred_bimod.dir_hits      118683408 # total number of direction-predicted hits (includes addr-hits)
bpred_bimod.misses          1839567 # total number of misses
bpred_bimod.jr_hits        28424013 # total number of address-predicted hits for JR's
bpred_bimod.jr_seen        28430346 # total number of JR's seen
bpred_bimod.jr_non_ras_hits.PP           39 # total number of address-predicted hits for non-RAS JR's
bpred_bimod.jr_non_ras_seen.PP         1276 # total number of non-RAS JR's seen
bpred_bimod.bpred_addr_rate    0.9847 # branch address-prediction rate (i.e., addr-hits/updates)
bpred_bimod.bpred_dir_rate    0.9847 # branch direction-prediction rate (i.e., all-hits/updates)
bpred_bimod.bpred_jr_rate    0.9998 # JR address-prediction rate (i.e., JR addr-hits/JRs seen)
bpred_bimod.bpred_jr_non_ras_rate.PP    0.0306 # non-RAS JR addr-pred rate (ie, non-RAS JR hits/JRs seen)
bpred_bimod.retstack_pushes     28778438 # total number of address pushed onto ret-addr stack
bpred_bimod.retstack_pops     28591494 # total number of address popped off of ret-addr stack
bpred_bimod.used_ras.PP     28429070 # total number of RAS predictions used
bpred_bimod.ras_hits.PP     28423974 # total number of RAS hits
bpred_bimod.ras_rate.PP    0.9998 # RAS prediction rate (i.e., RAS hits/used RAS)
il1.accesses              876737662 # total number of accesses
il1.hits                  858492500 # total number of hits
il1.misses                 18245162 # total number of misses
il1.replacements           18244650 # total number of replacements
il1.writebacks                    0 # total number of writebacks
il1.invalidations                 0 # total number of invalidations
il1.miss_rate                0.0208 # miss rate (i.e., misses/ref)
il1.repl_rate                0.0208 # replacement rate (i.e., repls/ref)
il1.wb_rate                  0.0000 # writeback rate (i.e., wrbks/ref)
il1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
dl1.accesses              257929004 # total number of accesses
dl1.hits                  257401105 # total number of hits
dl1.misses                   527899 # total number of misses
dl1.replacements             527387 # total number of replacements
dl1.writebacks               324919 # total number of writebacks
dl1.invalidations                 0 # total number of invalidations
dl1.miss_rate                0.0020 # miss rate (i.e., misses/ref)
dl1.repl_rate                0.0020 # replacement rate (i.e., repls/ref)
dl1.wb_rate                  0.0013 # writeback rate (i.e., wrbks/ref)
dl1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
ul2.accesses               19097980 # total number of accesses
ul2.hits                   19035786 # total number of hits
ul2.misses                    62194 # total number of misses
ul2.replacements              58098 # total number of replacements
ul2.writebacks                57070 # total number of writebacks
ul2.invalidations                 0 # total number of invalidations
ul2.miss_rate                0.0033 # miss rate (i.e., misses/ref)
ul2.repl_rate                0.0030 # replacement rate (i.e., repls/ref)
ul2.wb_rate                  0.0030 # writeback rate (i.e., wrbks/ref)
ul2.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
itlb.accesses             876737662 # total number of accesses
itlb.hits                 876737631 # total number of hits
itlb.misses                      31 # total number of misses
itlb.replacements                 0 # total number of replacements
itlb.writebacks                   0 # total number of writebacks
itlb.invalidations                0 # total number of invalidations
itlb.miss_rate               0.0000 # miss rate (i.e., misses/ref)
itlb.repl_rate               0.0000 # replacement rate (i.e., repls/ref)
itlb.wb_rate                 0.0000 # writeback rate (i.e., wrbks/ref)
itlb.inv_rate                0.0000 # invalidation rate (i.e., invs/ref)
dtlb.accesses             257938960 # total number of accesses
dtlb.hits                 257937579 # total number of hits
dtlb.misses                    1381 # total number of misses
dtlb.replacements              1253 # total number of replacements
dtlb.writebacks                   0 # total number of writebacks
dtlb.invalidations                0 # total number of invalidations
dtlb.miss_rate               0.0000 # miss rate (i.e., misses/ref)
dtlb.repl_rate               0.0000 # replacement rate (i.e., repls/ref)
dtlb.wb_rate                 0.0000 # writeback rate (i.e., wrbks/ref)
dtlb.inv_rate                0.0000 # invalidation rate (i.e., invs/ref)
rename_power           115548586.7520 # total power usage of rename unit
bpred_power            2955534132.5156 # total power usage of bpred unit
window_power           1440362430.3855 # total power usage of instruction window
lsq_power              629368063.6892 # total power usage of load/store queue
regfile_power          2334350667.5198 # total power usage of arch. regfile
icache_power           1618501277.1417 # total power usage of icache
dcache_power           3976043613.5399 # total power usage of dcache
dcache2_power          2750337736.3510 # total power usage of dcache2
alu_power              12376680456.6155 # total power usage of alu
falu_power             9331624085.6193 # total power usage of falu
resultbus_power        1501277156.9849 # total power usage of resultbus
clock_power            17004047478.6054 # total power usage of clock
avg_rename_power             0.1768 # avg power usage of rename unit
avg_bpred_power              4.5231 # avg power usage of bpred unit
avg_window_power             2.2043 # avg power usage of instruction window
avg_lsq_power                0.9632 # avg power usage of lsq
avg_regfile_power            3.5725 # avg power usage of arch. regfile
avg_icache_power             2.4769 # avg power usage of icache
avg_dcache_power             6.0849 # avg power usage of dcache
avg_dcache2_power            4.2091 # avg power usage of dcache2
avg_alu_power               18.9412 # avg power usage of alu
avg_falu_power              14.2810 # avg power usage of falu
avg_resultbus_power          2.2975 # avg power usage of resultbus
avg_clock_power             26.0229 # avg power usage of clock
fetch_stage_power      4574035409.6572 # total power usage of fetch stage
dispatch_stage_power   115548586.7520 # total power usage of dispatch stage
issue_stage_power      22674069457.5661 # total power usage of issue stage
avg_fetch_power              7.0001 # average power of fetch unit per cycle
avg_dispatch_power           0.1768 # average power of dispatch unit per cycle
avg_issue_power             34.7002 # average power of issue unit per cycle
total_power            46702051600.1005 # total power per cycle
avg_total_power_cycle       71.4725 # average total power per cycle
avg_total_power_cycle_nofp_nod2      52.9823 # average total power per cycle
avg_total_power_insn        54.6515 # average total power per insn
avg_total_power_insn_nofp_nod2      40.5130 # average total power per insn
rename_power_cc1       81575860.3083 # total power usage of rename unit_cc1
bpred_power_cc1        457752631.8750 # total power usage of bpred unit_cc1
window_power_cc1       1068833805.8167 # total power usage of instruction window_cc1
lsq_power_cc1          83264350.3292 # total power usage of lsq_cc1
regfile_power_cc1      1417372426.2242 # total power usage of arch. regfile_cc1
icache_power_cc1       1193291166.2871 # total power usage of icache_cc1
dcache_power_cc1       1044071705.1690 # total power usage of dcache_cc1
dcache2_power_cc1      79008511.7650 # total power usage of dcache2_cc1
alu_power_cc1          3671526333.7168 # total power usage of alu_cc1
resultbus_power_cc1    782912896.2588 # total power usage of resultbus_cc1
clock_power_cc1        6276787079.5349 # total power usage of clock_cc1
avg_rename_power_cc1         0.1248 # avg power usage of rename unit_cc1
avg_bpred_power_cc1          0.7005 # avg power usage of bpred unit_cc1
avg_window_power_cc1         1.6357 # avg power usage of instruction window_cc1
avg_lsq_power_cc1            0.1274 # avg power usage of lsq_cc1
avg_regfile_power_cc1        2.1691 # avg power usage of arch. regfile_cc1
avg_icache_power_cc1         1.8262 # avg power usage of icache_cc1
avg_dcache_power_cc1         1.5978 # avg power usage of dcache_cc1
avg_dcache2_power_cc1        0.1209 # avg power usage of dcache2_cc1
avg_alu_power_cc1            5.6189 # avg power usage of alu_cc1
avg_resultbus_power_cc1       1.1982 # avg power usage of resultbus_cc1
avg_clock_power_cc1          9.6059 # avg power usage of clock_cc1
fetch_stage_power_cc1  1651043798.1621 # total power usage of fetch stage_cc1
dispatch_stage_power_cc1 81575860.3083 # total power usage of dispatch stage_cc1
issue_stage_power_cc1  6729617603.0555 # total power usage of issue stage_cc1
avg_fetch_power_cc1          2.5267 # average power of fetch unit per cycle_cc1
avg_dispatch_power_cc1       0.1248 # average power of dispatch unit per cycle_cc1
avg_issue_power_cc1         10.2990 # average power of issue unit per cycle_cc1
total_power_cycle_cc1  16156396767.2850 # total power per cycle_cc1
avg_total_power_cycle_cc1      24.7256 # average total power per cycle_cc1
avg_total_power_insn_cc1      18.9065 # average total power per insn_cc1
rename_power_cc2       75554654.4098 # total power usage of rename unit_cc2
bpred_power_cc2        272570325.2288 # total power usage of bpred unit_cc2
window_power_cc2       649458044.5009 # total power usage of instruction window_cc2
lsq_power_cc2          60395343.9772 # total power usage of lsq_cc2
regfile_power_cc2      334483922.4372 # total power usage of arch. regfile_cc2
icache_power_cc2       1193291166.2871 # total power usage of icache_cc2
dcache_power_cc2       784736906.2335 # total power usage of dcache_cc2
dcache2_power_cc2      40192610.2999 # total power usage of dcache2_cc2
alu_power_cc2          1270797693.5706 # total power usage of alu_cc2
resultbus_power_cc2    372357966.7913 # total power usage of resultbus_cc2
clock_power_cc2        3229510110.5253 # total power usage of clock_cc2
avg_rename_power_cc2         0.1156 # avg power usage of rename unit_cc2
avg_bpred_power_cc2          0.4171 # avg power usage of bpred unit_cc2
avg_window_power_cc2         0.9939 # avg power usage of instruction window_cc2
avg_lsq_power_cc2            0.0924 # avg power usage of instruction lsq_cc2
avg_regfile_power_cc2        0.5119 # avg power usage of arch. regfile_cc2
avg_icache_power_cc2         1.8262 # avg power usage of icache_cc2
avg_dcache_power_cc2         1.2010 # avg power usage of dcache_cc2
avg_dcache2_power_cc2        0.0615 # avg power usage of dcache2_cc2
avg_alu_power_cc2            1.9448 # avg power usage of alu_cc2
avg_resultbus_power_cc2       0.5699 # avg power usage of resultbus_cc2
avg_clock_power_cc2          4.9424 # avg power usage of clock_cc2
fetch_stage_power_cc2  1465861491.5159 # total power usage of fetch stage_cc2
dispatch_stage_power_cc2 75554654.4098 # total power usage of dispatch stage_cc2
issue_stage_power_cc2  3177938565.3734 # total power usage of issue stage_cc2
avg_fetch_power_cc2          2.2433 # average power of fetch unit per cycle_cc2
avg_dispatch_power_cc2       0.1156 # average power of dispatch unit per cycle_cc2
avg_issue_power_cc2          4.8635 # average power of issue unit per cycle_cc2
total_power_cycle_cc2  8283348744.2617 # total power per cycle_cc2
avg_total_power_cycle_cc2      12.6768 # average total power per cycle_cc2
avg_total_power_insn_cc2       9.6933 # average total power per insn_cc2
rename_power_cc3       78951927.1418 # total power usage of rename unit_cc3
bpred_power_cc3        522419493.8417 # total power usage of bpred unit_cc3
window_power_cc3       669279593.8848 # total power usage of instruction window_cc3
lsq_power_cc3          114267972.6006 # total power usage of lsq_cc3
regfile_power_cc3      396706485.0255 # total power usage of arch. regfile_cc3
icache_power_cc3       1235812176.8534 # total power usage of icache_cc3
dcache_power_cc3       1078849301.9013 # total power usage of dcache_cc3
dcache2_power_cc3      307325980.2219 # total power usage of dcache2_cc3
alu_power_cc3          2141313096.8294 # total power usage of alu_cc3
resultbus_power_cc3    413988843.3153 # total power usage of resultbus_cc3
clock_power_cc3        4252976569.2559 # total power usage of clock_cc3
avg_rename_power_cc3         0.1208 # avg power usage of rename unit_cc3
avg_bpred_power_cc3          0.7995 # avg power usage of bpred unit_cc3
avg_window_power_cc3         1.0243 # avg power usage of instruction window_cc3
avg_lsq_power_cc3            0.1749 # avg power usage of instruction lsq_cc3
avg_regfile_power_cc3        0.6071 # avg power usage of arch. regfile_cc3
avg_icache_power_cc3         1.8913 # avg power usage of icache_cc3
avg_dcache_power_cc3         1.6511 # avg power usage of dcache_cc3
avg_dcache2_power_cc3        0.4703 # avg power usage of dcache2_cc3
avg_alu_power_cc3            3.2770 # avg power usage of alu_cc3
avg_resultbus_power_cc3       0.6336 # avg power usage of resultbus_cc3
avg_clock_power_cc3          6.5087 # avg power usage of clock_cc3
fetch_stage_power_cc3  1758231670.6951 # total power usage of fetch stage_cc3
dispatch_stage_power_cc3 78951927.1418 # total power usage of dispatch stage_cc3
issue_stage_power_cc3  4725024788.7532 # total power usage of issue stage_cc3
avg_fetch_power_cc3          2.6908 # average power of fetch unit per cycle_cc3
avg_dispatch_power_cc3       0.1208 # average power of dispatch unit per cycle_cc3
avg_issue_power_cc3          7.2311 # average power of issue unit per cycle_cc3
total_power_cycle_cc3  11211891440.8715 # total power per cycle_cc3
avg_total_power_cycle_cc3      17.1586 # average total power per cycle_cc3
avg_total_power_insn_cc3      13.1203 # average total power per insn_cc3
total_rename_access       854523148 # total number accesses of rename unit
total_bpred_access        120522975 # total number accesses of bpred unit
total_window_access      3278351430 # total number accesses of instruction window
total_lsq_access          257949621 # total number accesses of load/store queue
total_regfile_access     1364867003 # total number accesses of arch. regfile
total_icache_access       876758841 # total number accesses of icache
total_dcache_access       257929004 # total number accesses of dcache
total_dcache2_access       19097980 # total number accesses of dcache2
total_alu_access          816792709 # total number accesses of alu
total_resultbus_access    900205384 # total number accesses of resultbus
avg_rename_access            1.3078 # avg number accesses of rename unit
avg_bpred_access             0.1844 # avg number accesses of bpred unit
avg_window_access            5.0172 # avg number accesses of instruction window
avg_lsq_access               0.3948 # avg number accesses of lsq
avg_regfile_access           2.0888 # avg number accesses of arch. regfile
avg_icache_access            1.3418 # avg number accesses of icache
avg_dcache_access            0.3947 # avg number accesses of dcache
avg_dcache2_access           0.0292 # avg number accesses of dcache2
avg_alu_access               1.2500 # avg number accesses of alu
avg_resultbus_access         1.3777 # avg number accesses of resultbus
max_rename_access                 2 # max number accesses of rename unit
max_bpred_access                  3 # max number accesses of bpred unit
max_window_access                14 # max number accesses of instruction window
max_lsq_access                    6 # max number accesses of load/store queue
max_regfile_access                8 # max number accesses of arch. regfile
max_icache_access                 2 # max number accesses of icache
max_dcache_access                 4 # max number accesses of dcache
max_dcache2_access                4 # max number accesses of dcache2
max_alu_access                    4 # max number accesses of alu
max_resultbus_access              8 # max number accesses of resultbus
max_cycle_power_cc1         52.5058 # maximum cycle power usage of cc1
max_cycle_power_cc2         29.9004 # maximum cycle power usage of cc2
max_cycle_power_cc3         32.9229 # maximum cycle power usage of cc3
sim_invalid_addrs                 2 # total non-speculative bogus addresses seen (debug var)
ld_text_base             0x00400000 # program text (code) segment base
ld_text_size                 124464 # program text (code) size in bytes
ld_data_base             0x10000000 # program initialized data segment base
ld_data_size                  13588 # program init'ed `.data' and uninit'ed `.bss' size in bytes
ld_stack_base            0x7fffc000 # program stack segment base (highest address in stack)
ld_stack_size                 16384 # program initial stack size
ld_prog_entry            0x00400140 # program entry point (initial PC)
ld_environ_base          0x7fff8000 # program environment base address address
ld_target_big_endian              0 # target executable endian-ness, non-zero if big endian
mem.page_count                  962 # total number of pages allocated
mem.page_mem                  3848k # total size of memory pages allocated
mem.ptab_misses                1272 # total first level page table misses
mem.ptab_accesses        5566474758 # total page table accesses
mem.ptab_miss_rate           0.0000 # first level page table miss rate

