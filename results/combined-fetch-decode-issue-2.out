sim-outorder: SimpleScalar/PISA Tool Set version 3.0 of August, 2003.
Copyright (c) 1994-2003 by Todd M. Austin, Ph.D. and SimpleScalar, LLC.
All Rights Reserved. This version of SimpleScalar is licensed for academic
non-commercial use.  No portion of this work may be used by any commercial
entity, or for any commercial purpose, without the prior written permission
of SimpleScalar, LLC (info@simplescalar.com).


Processor Parameters:
Issue Width: 2
Window Size: 16
Number of Virtual Registers: 32
Number of Physical Registers: 16
Datapath Width: 64
Total Power Consumption: 50.2719
Branch Predictor Power Consumption: 1.25755  (2.61%)
 branch target buffer power (W): 0.902794
 local predict power (W): 0.0879711
 global predict power (W): 0.0996078
 chooser power (W): 0.0702439
 RAS power (W): 0.0969383
Rename Logic Power Consumption: 0.176835  (0.366%)
 Instruction Decode Power (W): 0.00799577
 RAT decode_power (W): 0.0567572
 RAT wordline_power (W): 0.0144561
 RAT bitline_power (W): 0.0958077
 DCL Comparators (W): 0.00181792
Instruction Window Power Consumption: 0.849701  (1.76%)
 tagdrive (W): 0.0428745
 tagmatch (W): 0.0160167
 Selection Logic (W): 0.00671084
 decode_power (W): 0.0266252
 wordline_power (W): 0.0272771
 bitline_power (W): 0.730197
Load/Store Queue Power Consumption: 0.96318  (2%)
 tagdrive (W): 0.457232
 tagmatch (W): 0.100774
 decode_power (W): 0.00799577
 wordline_power (W): 0.0150119
 bitline_power (W): 0.382166
Arch. Register File Power Consumption: 1.30831  (2.71%)
 decode_power (W): 0.0567572
 wordline_power (W): 0.0272771
 bitline_power (W): 1.22428
Result Bus Power Consumption: 1.06403  (2.2%)
Total Clock Power: 18.7228  (38.8%)
Int ALU Power: 4.66013  (9.65%)
FP ALU Power: 7.14052  (14.8%)
Instruction Cache Power Consumption: 1.99903  (4.14%)
 decode_power (W): 0.362444
 wordline_power (W): 0.0491838
 bitline_power (W): 1.14691
 senseamp_power (W): 0.192
 tagarray_power (W): 0.248491
Itlb_power (W): 0.263317 (0.545%)
Data Cache Power Consumption: 4.75559  (9.85%)
 decode_power (W): 0.651055
 wordline_power (W): 0.196735
 bitline_power (W): 2.71235
 senseamp_power (W): 0.768
 tagarray_power (W): 0.427443
Dtlb_power (W): 0.901877 (1.87%)
Level 2 Cache Power Consumption: 4.2091 (8.72%)
 decode_power (W): 0.41817
 wordline_power (W): 0.0430878
 bitline_power (W): 3.0244
 senseamp_power (W): 0.192
 tagarray_power (W): 0.531433
sim: command line: sim-outorder -redir:sim /home/ubuntu/ece568-single-core-dse/results/combined-fetch-decode-issue-2.out -config /home/ubuntu/ece568-single-core-dse/configs/step3/combined-fetch-decode-issue-2.cfg eeg 

sim: simulation started @ Mon Mar  7 05:57:36 2016, options follow:

sim-outorder: This simulator implements a very detailed out-of-order issue
superscalar processor with a two-level memory system and speculative
execution support.  This simulator is a performance simulator, tracking the
latency of all pipeline operations.

# -config                     # load configuration from a file
# -dumpconfig                 # dump configuration to a file
# -h                    false # print help message    
# -v                    false # verbose operation     
# -d                    false # enable debug message  
# -i                    false # start in Dlite debugger
-seed                       1 # random number generator seed (0 for timer seed)
# -q                    false # initialize and terminate immediately
# -chkpt               <null> # restore EIO trace execution from <fname>
# -redir:sim     /home/ubuntu/ece568-single-core-dse/results/combined-fetch-decode-issue-2.out # redirect simulator output to file (non-interactive only)
# -redir:prog          <null> # redirect simulated program output to file
-nice                       0 # simulator scheduling priority
-max:inst                   0 # maximum number of inst's to execute
-fastfwd                    0 # number of insts skipped before timing starts
# -ptrace              <null> # generate pipetrace, i.e., <fname|stdout|stderr> <range>
-fetch:ifqsize              2 # instruction fetch queue size (in insts)
-fetch:mplat                3 # extra branch mis-prediction latency
-fetch:speed                1 # speed of front-end of machine relative to execution core
-bpred                  bimod # branch predictor type {nottaken|taken|perfect|bimod|2lev|comb}
-bpred:bimod     2048 # bimodal predictor config (<table size>)
-bpred:2lev      1 1024 8 0 # 2-level predictor config (<l1size> <l2size> <hist_size> <xor>)
-bpred:comb      1024 # combining predictor config (<meta_table_size>)
-bpred:ras                  8 # return address stack size (0 for no return stack)
-bpred:btb       128 2 # BTB config (<num_sets> <associativity>)
# -bpred:spec_update       <null> # speculative predictors update in {ID|WB} (default non-spec)
-decode:width               2 # instruction decode B/W (insts/cycle)
-issue:width                2 # instruction issue B/W (insts/cycle)
-issue:inorder          false # run pipeline with in-order issue
-issue:wrongpath         true # issue instructions down wrong execution paths
-commit:width               2 # instruction commit B/W (insts/cycle)
-ruu:size                  16 # register update unit (RUU) size
-lsq:size                   8 # load/store queue (LSQ) size
-cache:dl1       dl1:64:64:4:l # l1 data cache config, i.e., {<config>|none}
-cache:dl1lat               1 # l1 data cache hit latency (in cycles)
-cache:dl2       ul2:1024:64:4:l # l2 data cache config, i.e., {<config>|none}
-cache:dl2lat               6 # l2 data cache hit latency (in cycles)
-cache:il1       il1:256:64:1:l # l1 inst cache config, i.e., {<config>|dl1|dl2|none}
-cache:il1lat               1 # l1 instruction cache hit latency (in cycles)
-cache:il2                dl2 # l2 instruction cache config, i.e., {<config>|dl2|none}
-cache:il2lat               6 # l2 instruction cache hit latency (in cycles)
-cache:flush            false # flush caches on system calls
-cache:icompress        false # convert 64-bit inst addresses to 32-bit inst equivalents
-mem:lat         18 2 # memory access latency (<first_chunk> <inter_chunk>)
-mem:width                  8 # memory access bus width (in bytes)
-tlb:itlb        itlb:16:4096:4:l # instruction TLB config, i.e., {<config>|none}
-tlb:dtlb        dtlb:32:4096:4:l # data TLB config, i.e., {<config>|none}
-tlb:lat                   30 # inst/data TLB miss latency (in cycles)
-res:ialu                   4 # total number of integer ALU's available
-res:imult                  1 # total number of integer multiplier/dividers available
-res:memport                2 # total number of memory system ports available (to CPU)
-res:fpalu                  2 # total number of floating point ALU's available
-res:fpmult                 2 # total number of floating point multiplier/dividers available
# -pcstat              <null> # profile stat(s) against text addr's (mult uses ok)
-bugcompat              false # operate in backward-compatible bugs mode (for testing only)

  Pipetrace range arguments are formatted as follows:

    {{@|#}<start>}:{{@|#|+}<end>}

  Both ends of the range are optional, if neither are specified, the entire
  execution is traced.  Ranges that start with a `@' designate an address
  range to be traced, those that start with an `#' designate a cycle count
  range.  All other range values represent an instruction count range.  The
  second argument, if specified with a `+', indicates a value relative
  to the first argument, e.g., 1000:+100 == 1000:1100.  Program symbols may
  be used in all contexts.

    Examples:   -ptrace FOO.trc #0:#1000
                -ptrace BAR.trc @2000:
                -ptrace BLAH.trc :1500
                -ptrace UXXE.trc :
                -ptrace FOOBAR.trc @main:+278

  Branch predictor configuration examples for 2-level predictor:
    Configurations:   N, M, W, X
      N   # entries in first level (# of shift register(s))
      W   width of shift register(s)
      M   # entries in 2nd level (# of counters, or other FSM)
      X   (yes-1/no-0) xor history and address for 2nd level index
    Sample predictors:
      GAg     : 1, W, 2^W, 0
      GAp     : 1, W, M (M > 2^W), 0
      PAg     : N, W, 2^W, 0
      PAp     : N, W, M (M == 2^(N+W)), 0
      gshare  : 1, W, 2^W, 1
  Predictor `comb' combines a bimodal and a 2-level predictor.

  The cache config parameter <config> has the following format:

    <name>:<nsets>:<bsize>:<assoc>:<repl>

    <name>   - name of the cache being defined
    <nsets>  - number of sets in the cache
    <bsize>  - block size of the cache
    <assoc>  - associativity of the cache
    <repl>   - block replacement strategy, 'l'-LRU, 'f'-FIFO, 'r'-random

    Examples:   -cache:dl1 dl1:4096:32:1:l
                -dtlb dtlb:128:4096:32:r

  Cache levels can be unified by pointing a level of the instruction cache
  hierarchy at the data cache hiearchy using the "dl1" and "dl2" cache
  configuration arguments.  Most sensible combinations are supported, e.g.,

    A unified l2 cache (il2 is pointed at dl2):
      -cache:il1 il1:128:64:1:l -cache:il2 dl2
      -cache:dl1 dl1:256:32:1:l -cache:dl2 ul2:1024:64:2:l

    Or, a fully unified cache hierarchy (il1 pointed at dl1):
      -cache:il1 dl1
      -cache:dl1 ul1:256:32:1:l -cache:dl2 ul2:1024:64:2:l



sim: ** starting performance simulation **

sim: ** simulation statistics **
sim_num_insn              842550792 # total number of instructions committed
sim_num_refs              255032800 # total number of loads and stores committed
sim_num_loads             171016145 # total number of loads committed
sim_num_stores         84016655.0000 # total number of stores committed
sim_num_branches          120522975 # total number of branches committed
sim_elapsed_time                875 # total simulation time in seconds
sim_inst_rate           962915.1909 # simulation speed (in insts/sec)
sim_total_insn            860208746 # total number of instructions executed
sim_total_refs            263704415 # total number of loads and stores executed
sim_total_loads           179158254 # total number of loads executed
sim_total_stores       84546161.0000 # total number of stores executed
sim_total_branches        121817382 # total number of branches executed
sim_cycle                 692770068 # total simulation time in cycles
sim_IPC                      1.2162 # instructions per cycle
sim_CPI                      0.8222 # cycles per instruction
sim_exec_BW                  1.2417 # total instructions (mis-spec + committed) per cycle
sim_IPB                      6.9908 # instruction per branch
IFQ_count                1199566921 # cumulative IFQ occupancy
IFQ_fcount                571485753 # cumulative IFQ full count
ifq_occupancy                1.7316 # avg IFQ occupancy (insn's)
ifq_rate                     1.2417 # avg IFQ dispatch rate (insn/cycle)
ifq_latency                  1.3945 # avg IFQ occupant latency (cycle's)
ifq_full                     0.8249 # fraction of time (cycle's) IFQ was full
RUU_count                8620335252 # cumulative RUU occupancy
RUU_fcount                230574164 # cumulative RUU full count
ruu_occupancy               12.4433 # avg RUU occupancy (insn's)
ruu_rate                     1.2417 # avg RUU dispatch rate (insn/cycle)
ruu_latency                 10.0212 # avg RUU occupant latency (cycle's)
ruu_full                     0.3328 # fraction of time (cycle's) RUU was full
LSQ_count                2783329274 # cumulative LSQ occupancy
LSQ_fcount                137103810 # cumulative LSQ full count
lsq_occupancy                4.0177 # avg LSQ occupancy (insn's)
lsq_rate                     1.2417 # avg LSQ dispatch rate (insn/cycle)
lsq_latency                  3.2356 # avg LSQ occupant latency (cycle's)
lsq_full                     0.1979 # fraction of time (cycle's) LSQ was full
sim_slip                12392053839 # total number of slip cycles
avg_sim_slip                14.7078 # the average slip between issue and retirement
bpred_bimod.lookups       122124918 # total number of bpred lookups
bpred_bimod.updates       120522975 # total number of updates
bpred_bimod.addr_hits     118590249 # total number of address-predicted hits
bpred_bimod.dir_hits      118682813 # total number of direction-predicted hits (includes addr-hits)
bpred_bimod.misses          1840162 # total number of misses
bpred_bimod.jr_hits        28422324 # total number of address-predicted hits for JR's
bpred_bimod.jr_seen        28430346 # total number of JR's seen
bpred_bimod.jr_non_ras_hits.PP           39 # total number of address-predicted hits for non-RAS JR's
bpred_bimod.jr_non_ras_seen.PP         1276 # total number of non-RAS JR's seen
bpred_bimod.bpred_addr_rate    0.9840 # branch address-prediction rate (i.e., addr-hits/updates)
bpred_bimod.bpred_dir_rate    0.9847 # branch direction-prediction rate (i.e., all-hits/updates)
bpred_bimod.bpred_jr_rate    0.9997 # JR address-prediction rate (i.e., JR addr-hits/JRs seen)
bpred_bimod.bpred_jr_non_ras_rate.PP    0.0306 # non-RAS JR addr-pred rate (ie, non-RAS JR hits/JRs seen)
bpred_bimod.retstack_pushes     28891259 # total number of address pushed onto ret-addr stack
bpred_bimod.retstack_pops     28592491 # total number of address popped off of ret-addr stack
bpred_bimod.used_ras.PP     28429070 # total number of RAS predictions used
bpred_bimod.ras_hits.PP     28422285 # total number of RAS hits
bpred_bimod.ras_rate.PP    0.9998 # RAS prediction rate (i.e., RAS hits/used RAS)
il1.accesses              874587699 # total number of accesses
il1.hits                  863497951 # total number of hits
il1.misses                 11089748 # total number of misses
il1.replacements           11089492 # total number of replacements
il1.writebacks                    0 # total number of writebacks
il1.invalidations                 0 # total number of invalidations
il1.miss_rate                0.0127 # miss rate (i.e., misses/ref)
il1.repl_rate                0.0127 # replacement rate (i.e., repls/ref)
il1.wb_rate                  0.0000 # writeback rate (i.e., wrbks/ref)
il1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
dl1.accesses              258095707 # total number of accesses
dl1.hits                  257778282 # total number of hits
dl1.misses                   317425 # total number of misses
dl1.replacements             317169 # total number of replacements
dl1.writebacks               195436 # total number of writebacks
dl1.invalidations                 0 # total number of invalidations
dl1.miss_rate                0.0012 # miss rate (i.e., misses/ref)
dl1.repl_rate                0.0012 # replacement rate (i.e., repls/ref)
dl1.wb_rate                  0.0008 # writeback rate (i.e., wrbks/ref)
dl1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
ul2.accesses               11602609 # total number of accesses
ul2.hits                   11540401 # total number of hits
ul2.misses                    62208 # total number of misses
ul2.replacements              58112 # total number of replacements
ul2.writebacks                57080 # total number of writebacks
ul2.invalidations                 0 # total number of invalidations
ul2.miss_rate                0.0054 # miss rate (i.e., misses/ref)
ul2.repl_rate                0.0050 # replacement rate (i.e., repls/ref)
ul2.wb_rate                  0.0049 # writeback rate (i.e., wrbks/ref)
ul2.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
itlb.accesses             874587699 # total number of accesses
itlb.hits                 874587668 # total number of hits
itlb.misses                      31 # total number of misses
itlb.replacements                 0 # total number of replacements
itlb.writebacks                   0 # total number of writebacks
itlb.invalidations                0 # total number of invalidations
itlb.miss_rate               0.0000 # miss rate (i.e., misses/ref)
itlb.repl_rate               0.0000 # replacement rate (i.e., repls/ref)
itlb.wb_rate                 0.0000 # writeback rate (i.e., wrbks/ref)
itlb.inv_rate                0.0000 # invalidation rate (i.e., invs/ref)
dtlb.accesses             258107528 # total number of accesses
dtlb.hits                 258106147 # total number of hits
dtlb.misses                    1381 # total number of misses
dtlb.replacements              1253 # total number of replacements
dtlb.writebacks                   0 # total number of writebacks
dtlb.invalidations                0 # total number of invalidations
dtlb.miss_rate               0.0000 # miss rate (i.e., misses/ref)
dtlb.repl_rate               0.0000 # replacement rate (i.e., repls/ref)
dtlb.wb_rate                 0.0000 # writeback rate (i.e., wrbks/ref)
dtlb.inv_rate                0.0000 # invalidation rate (i.e., invs/ref)
rename_power           122505758.0338 # total power usage of rename unit
bpred_power            871196226.5939 # total power usage of bpred unit
window_power           588647581.7955 # total power usage of instruction window
lsq_power              667262263.5193 # total power usage of load/store queue
regfile_power          906358695.3317 # total power usage of arch. regfile
icache_power           1567287760.4629 # total power usage of icache
dcache_power           3919321146.2547 # total power usage of dcache
dcache2_power          2915935354.7615 # total power usage of dcache2
alu_power              8175139008.5830 # total power usage of alu
falu_power             4946740200.4382 # total power usage of falu
resultbus_power        737125364.5951 # total power usage of resultbus
clock_power            12970574770.5547 # total power usage of clock
avg_rename_power             0.1768 # avg power usage of rename unit
avg_bpred_power              1.2576 # avg power usage of bpred unit
avg_window_power             0.8497 # avg power usage of instruction window
avg_lsq_power                0.9632 # avg power usage of lsq
avg_regfile_power            1.3083 # avg power usage of arch. regfile
avg_icache_power             2.2623 # avg power usage of icache
avg_dcache_power             5.6575 # avg power usage of dcache
avg_dcache2_power            4.2091 # avg power usage of dcache2
avg_alu_power               11.8007 # avg power usage of alu
avg_falu_power               7.1405 # avg power usage of falu
avg_resultbus_power          1.0640 # avg power usage of resultbus
avg_clock_power             18.7228 # avg power usage of clock
fetch_stage_power      2438483987.0568 # total power usage of fetch stage
dispatch_stage_power   122505758.0338 # total power usage of dispatch stage
issue_stage_power      17003430719.5091 # total power usage of issue stage
avg_fetch_power              3.5199 # average power of fetch unit per cycle
avg_dispatch_power           0.1768 # average power of dispatch unit per cycle
avg_issue_power             24.5441 # average power of issue unit per cycle
total_power            33441353930.4861 # total power per cycle
avg_total_power_cycle       48.2719 # average total power per cycle
avg_total_power_cycle_nofp_nod2      36.9223 # average total power per cycle
avg_total_power_insn        38.8759 # average total power per insn
avg_total_power_insn_nofp_nod2      29.7354 # average total power per insn
rename_power_cc1       86008534.5337 # total power usage of rename unit_cc1
bpred_power_cc1        144644694.7222 # total power usage of bpred unit_cc1
window_power_cc1       542621409.7228 # total power usage of instruction window_cc1
lsq_power_cc1          95008035.6113 # total power usage of lsq_cc1
regfile_power_cc1      564762617.9144 # total power usage of arch. regfile_cc1
icache_power_cc1       1124034824.2509 # total power usage of icache_cc1
dcache_power_cc1       1141274575.0027 # total power usage of dcache_cc1
dcache2_power_cc1      48005082.8869 # total power usage of dcache2_cc1
alu_power_cc1          2996187317.0286 # total power usage of alu_cc1
resultbus_power_cc1    441222318.8233 # total power usage of resultbus_cc1
clock_power_cc1        5312926696.1675 # total power usage of clock_cc1
avg_rename_power_cc1         0.1242 # avg power usage of rename unit_cc1
avg_bpred_power_cc1          0.2088 # avg power usage of bpred unit_cc1
avg_window_power_cc1         0.7833 # avg power usage of instruction window_cc1
avg_lsq_power_cc1            0.1371 # avg power usage of lsq_cc1
avg_regfile_power_cc1        0.8152 # avg power usage of arch. regfile_cc1
avg_icache_power_cc1         1.6225 # avg power usage of icache_cc1
avg_dcache_power_cc1         1.6474 # avg power usage of dcache_cc1
avg_dcache2_power_cc1        0.0693 # avg power usage of dcache2_cc1
avg_alu_power_cc1            4.3249 # avg power usage of alu_cc1
avg_resultbus_power_cc1       0.6369 # avg power usage of resultbus_cc1
avg_clock_power_cc1          7.6691 # avg power usage of clock_cc1
fetch_stage_power_cc1  1268679518.9731 # total power usage of fetch stage_cc1
dispatch_stage_power_cc1 86008534.5337 # total power usage of dispatch stage_cc1
issue_stage_power_cc1  5264318739.0756 # total power usage of issue stage_cc1
avg_fetch_power_cc1          1.8313 # average power of fetch unit per cycle_cc1
avg_dispatch_power_cc1       0.1242 # average power of dispatch unit per cycle_cc1
avg_issue_power_cc1          7.5989 # average power of issue unit per cycle_cc1
total_power_cycle_cc1  12496696106.6644 # total power per cycle_cc1
avg_total_power_cycle_cc1      18.0387 # average total power per cycle_cc1
avg_total_power_insn_cc1      14.5275 # average total power per insn_cc1
rename_power_cc2       76054644.9792 # total power usage of rename unit_cc2
bpred_power_cc2        75782115.4314 # total power usage of bpred unit_cc2
window_power_cc2       489009937.3588 # total power usage of instruction window_cc2
lsq_power_cc2          60442505.7662 # total power usage of lsq_cc2
regfile_power_cc2      225217214.0116 # total power usage of arch. regfile_cc2
icache_power_cc2       1124034824.2509 # total power usage of icache_cc2
dcache_power_cc2       730083483.7093 # total power usage of dcache_cc2
dcache2_power_cc2      24418244.3367 # total power usage of dcache2_cc2
alu_power_cc2          1267996406.6269 # total power usage of alu_cc2
resultbus_power_cc2    350496061.8340 # total power usage of resultbus_cc2
clock_power_cc2        3285038678.3625 # total power usage of clock_cc2
avg_rename_power_cc2         0.1098 # avg power usage of rename unit_cc2
avg_bpred_power_cc2          0.1094 # avg power usage of bpred unit_cc2
avg_window_power_cc2         0.7059 # avg power usage of instruction window_cc2
avg_lsq_power_cc2            0.0872 # avg power usage of instruction lsq_cc2
avg_regfile_power_cc2        0.3251 # avg power usage of arch. regfile_cc2
avg_icache_power_cc2         1.6225 # avg power usage of icache_cc2
avg_dcache_power_cc2         1.0539 # avg power usage of dcache_cc2
avg_dcache2_power_cc2        0.0352 # avg power usage of dcache2_cc2
avg_alu_power_cc2            1.8303 # avg power usage of alu_cc2
avg_resultbus_power_cc2       0.5059 # avg power usage of resultbus_cc2
avg_clock_power_cc2          4.7419 # avg power usage of clock_cc2
fetch_stage_power_cc2  1199816939.6822 # total power usage of fetch stage_cc2
dispatch_stage_power_cc2 76054644.9792 # total power usage of dispatch stage_cc2
issue_stage_power_cc2  2922446639.6319 # total power usage of issue stage_cc2
avg_fetch_power_cc2          1.7319 # average power of fetch unit per cycle_cc2
avg_dispatch_power_cc2       0.1098 # average power of dispatch unit per cycle_cc2
avg_issue_power_cc2          4.2185 # average power of issue unit per cycle_cc2
total_power_cycle_cc2  7708574116.6674 # total power per cycle_cc2
avg_total_power_cycle_cc2      11.1272 # average total power per cycle_cc2
avg_total_power_insn_cc2       8.9613 # average total power per insn_cc2
rename_power_cc3       79704367.4258 # total power usage of rename unit_cc3
bpred_power_cc3        148437270.6976 # total power usage of bpred unit_cc3
window_power_cc3       494144174.3996 # total power usage of instruction window_cc3
lsq_power_cc3          116842098.1030 # total power usage of lsq_cc3
regfile_power_cc3      247155107.9262 # total power usage of arch. regfile_cc3
icache_power_cc3       1168360117.8483 # total power usage of icache_cc3
dcache_power_cc3       1008225239.7859 # total power usage of dcache_cc3
dcache2_power_cc3      311211764.3877 # total power usage of dcache2_cc3
alu_power_cc3          1785891582.6206 # total power usage of alu_cc3
resultbus_power_cc3    366823767.3595 # total power usage of resultbus_cc3
clock_power_cc3        4031290198.8190 # total power usage of clock_cc3
avg_rename_power_cc3         0.1151 # avg power usage of rename unit_cc3
avg_bpred_power_cc3          0.2143 # avg power usage of bpred unit_cc3
avg_window_power_cc3         0.7133 # avg power usage of instruction window_cc3
avg_lsq_power_cc3            0.1687 # avg power usage of instruction lsq_cc3
avg_regfile_power_cc3        0.3568 # avg power usage of arch. regfile_cc3
avg_icache_power_cc3         1.6865 # avg power usage of icache_cc3
avg_dcache_power_cc3         1.4554 # avg power usage of dcache_cc3
avg_dcache2_power_cc3        0.4492 # avg power usage of dcache2_cc3
avg_alu_power_cc3            2.5779 # avg power usage of alu_cc3
avg_resultbus_power_cc3       0.5295 # avg power usage of resultbus_cc3
avg_clock_power_cc3          5.8191 # avg power usage of clock_cc3
fetch_stage_power_cc3  1316797388.5459 # total power usage of fetch stage_cc3
dispatch_stage_power_cc3 79704367.4258 # total power usage of dispatch stage_cc3
issue_stage_power_cc3  4083138626.6564 # total power usage of issue stage_cc3
avg_fetch_power_cc3          1.9008 # average power of fetch unit per cycle_cc3
avg_dispatch_power_cc3       0.1151 # average power of dispatch unit per cycle_cc3
avg_issue_power_cc3          5.8939 # average power of issue unit per cycle_cc3
total_power_cycle_cc3  9758085689.3733 # total power per cycle_cc3
avg_total_power_cycle_cc3      14.0856 # average total power per cycle_cc3
avg_total_power_insn_cc3      11.3439 # average total power per insn_cc3
total_rename_access       860178041 # total number accesses of rename unit
total_bpred_access        120522975 # total number accesses of bpred unit
total_window_access      3168417473 # total number accesses of instruction window
total_lsq_access          258119583 # total number accesses of load/store queue
total_regfile_access     1253118085 # total number accesses of arch. regfile
total_icache_access       874627315 # total number accesses of icache
total_dcache_access       258095707 # total number accesses of dcache
total_dcache2_access       11602609 # total number accesses of dcache2
total_alu_access          815168594 # total number accesses of alu
total_resultbus_access    899703843 # total number accesses of resultbus
avg_rename_access            1.2417 # avg number accesses of rename unit
avg_bpred_access             0.1740 # avg number accesses of bpred unit
avg_window_access            4.5735 # avg number accesses of instruction window
avg_lsq_access               0.3726 # avg number accesses of lsq
avg_regfile_access           1.8089 # avg number accesses of arch. regfile
avg_icache_access            1.2625 # avg number accesses of icache
avg_dcache_access            0.3726 # avg number accesses of dcache
avg_dcache2_access           0.0167 # avg number accesses of dcache2
avg_alu_access               1.1767 # avg number accesses of alu
avg_resultbus_access         1.2987 # avg number accesses of resultbus
max_rename_access                 2 # max number accesses of rename unit
max_bpred_access                  2 # max number accesses of bpred unit
max_window_access                10 # max number accesses of instruction window
max_lsq_access                    4 # max number accesses of load/store queue
max_regfile_access                6 # max number accesses of arch. regfile
max_icache_access                 2 # max number accesses of icache
max_dcache_access                 4 # max number accesses of dcache
max_dcache2_access                4 # max number accesses of dcache2
max_alu_access                    2 # max number accesses of alu
max_resultbus_access              8 # max number accesses of resultbus
max_cycle_power_cc1         32.2462 # maximum cycle power usage of cc1
max_cycle_power_cc2         23.1852 # maximum cycle power usage of cc2
max_cycle_power_cc3         25.5123 # maximum cycle power usage of cc3
sim_invalid_addrs                 2 # total non-speculative bogus addresses seen (debug var)
ld_text_base             0x00400000 # program text (code) segment base
ld_text_size                 124464 # program text (code) size in bytes
ld_data_base             0x10000000 # program initialized data segment base
ld_data_size                  13588 # program init'ed `.data' and uninit'ed `.bss' size in bytes
ld_stack_base            0x7fffc000 # program stack segment base (highest address in stack)
ld_stack_size                 16384 # program initial stack size
ld_prog_entry            0x00400140 # program entry point (initial PC)
ld_environ_base          0x7fff8000 # program environment base address address
ld_target_big_endian              0 # target executable endian-ness, non-zero if big endian
mem.page_count                  962 # total number of pages allocated
mem.page_mem                  3848k # total size of memory pages allocated
mem.ptab_misses                1272 # total first level page table misses
mem.ptab_accesses        5562235778 # total page table accesses
mem.ptab_miss_rate           0.0000 # first level page table miss rate

